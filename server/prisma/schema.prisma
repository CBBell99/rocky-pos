generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employees {
  id        Int      @id @default(autoincrement())
  firstName String?  @db.VarChar(30)
  lastName  String?  @db.VarChar(50)
  role      Role
  passcode  Int?
  orders    orders[]
  table     tables?  @relation(fields: [tableId], references: [id])
  tableId   Int?
}

model menu_items {
  id          Int           @id @default(autoincrement())
  itemName    String        @db.VarChar(255)
  description String?       @db.VarChar(255)
  price       Int?
  category    Category
  orderItems  order_items[]
}

model order_items {
  id         Int         @id @default(autoincrement())
  orderId    Int?
  menuItemId Int?
  menuItems  menu_items? @relation(fields: [menuItemId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders     orders?     @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id         Int           @id @default(autoincrement())
  employeeId Int
  tableId    Int?
  createdAt  DateTime?     @default(now()) @db.Timestamp(6)
  orderItems order_items[]
  employees  employees?    @relation(fields: [employeeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tables     tables?       @relation(fields: [tableId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guestCount Int?
}

model tables {
  id        Int         @id @default(autoincrement())
  available Boolean?    @default(false)
  orders    orders[]
  employee  employees[]
}

enum Role {
  HOST
  KITCHEN
  ADMIN
}

enum Category {
  BREAKFAST
  LUNCH
  DESSERT
}
