generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employees {
  id         Int      @id @default(autoincrement())
  first_name String?  @db.VarChar(30)
  last_name  String?  @db.VarChar(50)
  job        String?  @db.VarChar(50)
  isadmin    Boolean? @default(false)
  passcode   Int?
  orders     orders[]
}

model menu_categories {
  id            Int          @id @default(autoincrement())
  category_name String       @db.VarChar(50)
  menu_items    menu_items[]
}

model menu_items {
  id              Int              @id @default(autoincrement())
  item_name       String           @db.VarChar(255)
  description     String?          @db.VarChar(255)
  category_id     Int?
  price           Int?
  menu_categories menu_categories? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items     order_items[]
}

model order_items {
  id           Int         @id @default(autoincrement())
  order_id     Int?
  menu_item_id Int?
  menu_items   menu_items? @relation(fields: [menu_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders       orders?     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id          Int           @id @default(autoincrement())
  employee_id Int?
  table_id    Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  employees   employees?    @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tables      tables?       @relation(fields: [table_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tables {
  id        Int      @id @default(autoincrement())
  available Boolean? @default(false)
  orders    orders[]
}
